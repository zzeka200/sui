searchState.loadedDescShard("narwhal_config", 0, "The epoch number.\nHolds all the node properties. An example is provided to …\nReturns the addresses of all known workers.\nAnemo network settings.\nThe preferred batch size. The workers seal a batch of …\nReturns the current epoch.\nThe epoch number for workers\nSize in bytes above which network messages are considered …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe depth of the garbage collection (Denominated in number …\nWhen the primary has <code>header_num_of_batches_threshold</code> num …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe delay after which the workers seal a batch of …\nThe maximum number of concurrent requests for messages …\nThe maximum delay that the primary should wait between …\nThe maximum number of batch digests included in a header.\nWhen the delay from last header reaches <code>min_header_delay</code>, …\nThe public key of this worker.\nNetwork admin server ports for primary &amp; worker.\nReturn the network addresses that are present in the …\nReturns the addresses of all workers that are not of our …\nReturns the addresses of all workers with a specific id …\nReturns the addresses of all our workers.\nPrimary network admin server port number\nProperties for the prometheus metrics\nPer-peer rate-limits (in requests/sec) for the …\nPer-peer rate-limits (in requests/sec) for the …\nSocket address the server should be listening to.\nThe delay after which the synchronizer retries to send …\nDetermine with how many nodes to sync when re-trying to …\nAddress to receive client transactions (WAN).\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the addresses of a specific worker (<code>id</code>) of a …\nAddress to receive messages from other workers (WAN) and …\nWorker network admin server base port number\nThe authority to worker index.\nUsed for testing - not recommended to use for any other …\nProvided an identifier it returns the corresponding …\nProvided an identifier it returns the corresponding …\nReturns the current epoch.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the keys in the committee\nReturns a leader node as a weighted choice seeded by the …\nUpdates the committee internal secondary indexes.\nReturn the network addresses that are present in the …\nReturn all the network addresses in the committee.\nReturn all the network addresses in the committee.\nReturns the primary address of the target primary.\nReturns the primary address of the target primary.\nReturns the stake required to reach a quorum (2f+1).\nReturns true if the provided stake has reached quorum …\nReturns true if the provided stake has reached …\nReturns the number of authorities.\nReturn the stake of a specific authority.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nUpdate the networking information of some of the …\nReturns the stake required to reach availability (f+1).\nReturn an ephemeral, available port. On unix systems, the …")
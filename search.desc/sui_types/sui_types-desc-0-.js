searchState.loadedDescShard("sui_types", 0, "An owned identifier.\nReturn the abstract size we use for gas metering This size …\nCreates a borrowed version of <code>self</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a vector of bytes to an <code>Identifier</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>Identifier</code> into a UTF-8-encoded byte …\nConverts this <code>Identifier</code> into a <code>String</code>.\nReturns if this identifier is “”. TODO: remove once we …\nReturns true if this string is a valid identifier.\nCreates a new <code>Identifier</code> instance.\nCreates a new <code>Identifier</code> from a string without checking if …\nParses <code>s</code> as an address. Valid formats for addresses are:\nParse <code>s</code> as a fully-qualified name: A Module ID (see …\nParse <code>s</code> as a Module ID: An address (see <code>parse_sui_address</code>…\nParse <code>s</code> as a struct type: A fully-qualified name, …\nParse <code>s</code> as a type: Either a struct type (see …\nUtility for generating programmable transactions, either …\nResolve well-known named addresses into numeric addresses.\nModule for conversions between sui-core types and sui-sdk …\nImplements the canonical string representation of the type …\nReturn a canonical string representation of the type. All …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nCurrent latest version of the authenticator state object.\nList of currently active JWKs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA non-SUI coin type (i.e., …\nA SUI coin (i.e., <code>0x2::coin::Coin&lt;0x2::sui::SUI&gt;</code>)\nThe number of bytes in an address.\nWrapper around StructTag with a space-efficient …\nEven though it is declared public, it is the “private”…\nType of a Sui object\nA type that is not <code>0x2::coin::Coin&lt;T&gt;</code>\nMove package containing one or more bytecode modules\nA record of a staked SUI coin (i.e., …\nA Move struct of the given type\nHex address: 0x0\nIncremenent the ObjectID by usize IDs, assuming the …\nGenerate a fake SuiAddress with repeated one byte.\nGenerate a fake ObjectID with repeated one byte.\nCreate an ObjectID from <code>TransactionDigest</code> and <code>creation_num</code>.\nReturn the transaction digest, to include in new objects\nDerive a globally unique object ID by hashing self.digest …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDerive a SuiAddress from [struct MultiSigPublicKey]. A …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConst fn variant of …\nParse the ObjectID from byte array or buffer.\nParse a SuiAddress from a byte array or buffer.\nConvert from hex string to ObjectID where the string is …\nMake an ObjectID with padding 0s before the single byte.\nParse ObjectID from hex string with or without 0x prefix, …\nCreate <code>count</code> object IDs starting with one at <code>offset</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the underlying bytes array of the ObjectID.\nReturn true if <code>self</code> is <code>0x2::coin::Coin&lt;T&gt;</code> for some T …\nReturn true if <code>self</code> is <code>0x2::coin::Coin&lt;t&gt;</code>\nReturn true if <code>self</code> is <code>0x2::coin::Coin&lt;t&gt;</code>\nReturn true if <code>self</code> is 0x2::coin::Coin&lt;0x2::sui::SUI&gt;\nWhether this type is valid as a primitive (pure) …\nReturns whether the type signature is &amp;mut TxContext, …\nReturns a new sequence number that is greater than all …\nCreate a new ObjectID\nIncrement the ObjectID by one, assuming the ObjectID hex …\nSerialize an <code>Option&lt;SuiAddress&gt;</code> in Hex.\nDeserialize into an <code>Option&lt;SuiAddress&gt;</code>.\nReturn a random ObjectID.\nReturn a random SuiAddress.\nReturn a random ObjectID from a given RNG.\nReturns the string representation of this object’s type …\nReturn the full hex string with 0x prefix without removing …\nReturn the underlying byte array of a SuiAddress.\nReturn the underlying bytes buffer of the ObjectID.\nConvert the address to a byte buffer.\nTries to convert the provided byte array into ObjectID.\nTries to convert the provided byte buffer into ObjectID.\nDerive a SuiAddress from a serialized signature in Sui …\nTries to convert the provided byte buffer into a …\nTries to convert the provided byte array into a SuiAddress.\nThis derives a zkLogin address by parsing the iss and …\nDefine as iss_bytes_len || iss_bytes || …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nUpdates state of the context instance. It’s intended to …\nGenerate a TxContext for testing with a specific sender.\nBridge provides an abstraction over multiple versions of …\nRust version of the Move bridge::BridgeInner type.\nThis is the standard API that all bridge inner object type …\nRust version of the Move sui::bridge::Bridge type This …\nRust version of the Move committee::BridgeCommittee type.\nRust version of the Move message::BridgeMessage type.\nRust version of the Move message::BridgeMessageKey type.\nRust version of the Move message::BridgeMessage type.\nRust version of the Move chain_ids::BridgeRoute type.\nRust version of the Move limiter::TransferLimiter type.\nRust version of the Move limiter::TransferRecord type.\nRust version of the Move treasury::BridgeTreasury type.\nRust version of the Move committee::CommitteeMember type.\nRust version of the Move …\nRust version of the Move …\nRust version of the Move message::TokenTransferPayload …\nObject ID of bridge Records (dynamic field)\nSelf Chain ID\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the bridge is currently frozen or not\nSummary of the limiter\nSequence numbers of all message types\nSummary of the treasury\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDetects a <code>&amp;mut sui::clock::Clock</code> or <code>sui::clock::Clock</code> in …\nAdd balance to this coin, erroring if the new total …\nNumber of decimal places the coin uses.\nDescription of the token\nIf the given object is a Coin, deserialize its contents …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a coin from BCS bytes\nCreate a TreasuryCap from BCS bytes\nCreate a coin from BCS bytes\nURL for the token logo\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this other StructTag representing a Coin?\nIs this other StructTag representing a CoinMetadata?\nChecks if the provided type is <code>CoinMetadata&lt;T&gt;</code>, returning …\nChecks if the provided type is <code>TreasuryCap&lt;T&gt;</code>, returning …\nName for the token\nSymbol for the token\nRust version of the Move sui::bag::Bag type.\nRust version of the Move sui::vec_map::Entry type\nRust version of the Move sui::linked_table::LinkedTable …\nRust version of the Move sui::linked_table::Node type.\nRust version of the Move sui::table::Table type.\nRust version of the Move sui::table::Table type.\nRust version of the Move sui::vec_map::VecMap type\nRust version of the Move sui::vec_set::VecSet type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nQuorum threshold for our fixed voting power–any message …\nSet total_voting_power as 10_000 by convention. Individual …\nValidity threshold defined by f+1\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNormalize the given weights to TOTAL_VOTING_POWER and …\nGenerate a simple committee with 4 validators each with …\nSamples authorities by weight\nDerive a seed deterministically from the transaction …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nRust representation of the Move type 0x2::config::Config.\nRust representation of the Move type 0x2::config::Setting.\nRust representation of the Move type …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>SettingData::read_value</code> on the setting’s data. The …\nReads the value of the setting, giving <code>newer_value</code> if the …\nTrait impl’d by aggregated signatures in asymmetric …\nTrait impl’d by signatures in asymmetric cryptography.\nDefines the compressed version of the public key that we …\nRepresents at least a quorum (could be more) of authority …\nAuthoritySignInfoTrait is a trait used specifically for a …\nUnlike [enum Signature], [enum CompressedSignature] does …\nA wrapper around AuthorityPublicKeyBytes but owns it.\nA wrapper around AuthorityPublicKeyBytes that provides a …\nCryptographic material with an immediate conversion …\nTrait impl’d by a public / private key pair in …\nRound number of generated randomness.\nSomething that we know how to hash and sign.\nTrait impl’d by a key/keypair that can create signatures.\nTrait impl’d by private (secret) keys in asymmetric …\nAccount Keys\nTrait impl’d by concrete types that represent digital …\nTrait impl’d by public keys in asymmetric cryptography.\nA wrapper struct to retrofit in [enum PublicKey] for …\nAdd a new message to the list of messages to be verified. …\nCombine signatures into a single aggregated signature.\nBorrow a byte slice representing the serialized form of …\nVerify a batch of aggregate signatures, each consisting of …\nGet a ConciseAuthorityPublicKeyBytesRef. Usage:\nDecode a SuiKeyPair from <code>flag || privkey</code> in Bech32 …\nEncode a SuiKeyPair as <code>flag || privkey</code> in Bech32 starting …\nAnnotating a trait or enum definition with an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse an object from its byte representation\nGenerate a new keypair using the given RNG.\nCreates a proof of that the authority account address is …\nGenerate a keypair from the specified RNG (useful for …\nReturns the deserialized signature and deserialized pubkey.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsists of iss_bytes_len || iss_bytes || …\nThis ensures it’s impossible to construct an instance …\nThe messaged passed in is already hashed form.\nGet the private key.\nGet the public key.\nGenerate a random committee key pairs with a given …\nCreate a new signature over a message.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nUse Self to verify that the provided signature for a given …\nVerify this aggregate signature assuming that all …\nVerify this aggregate signature where the signatures are …\nVerify proof of possession against the expected intent …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRust representation of the Move type …\nRust representation of the Move type …\nChecks coin denylist v1 at signing time. It checks that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRust representation of the Move type 0x2::coin::DenyCapV2.\nReturns 1) whether the coin deny list check passed, 2) the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA digest of a certificate, which commits to the signatures …\nRepresentation of a network’s identifier by the genesis …\nRepresentation of a Checkpoint’s digest\nA representation of a 32 byte digest\nA marker that signifies the object is deleted.\nA marker that signifies the object is wrapped into another …\nA digest of a SenderSignedData, which commits to the …\nA transaction will have a (unique) digest.\nA digest of a ZkLoginInputs, which commits to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ntake a short 4 byte identifier and convert it into a …\nA digest we use to signify the parent transaction was the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nRust version of the Move sui::display::Display type\nThe event that is emitted when a <code>Display</code> version is “…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRust version of the Move …\nRust version of the Move sui::dynamic_field::Field type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSimilar to <code>get_dynamic_field_object_from_store</code>, but …\nGiven a parent object ID (e.g. a table), and a <code>key</code>, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nVisitor to deserialize the outer structure of a …\nDeserialize the top-level structure from a dynamic field’…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nIf this field is a dynamic field, returns its value’s …\nShared objects in cancelled transaction. The sequence …\nThe old version, digest and owner.\nDeleted shared objects that appear mutably/owned in the …\nSame definition as in ObjectIn.\nIf an object exists (at root-level) in the store prior to …\nAny written object, including all of mutated, created, …\nPackages writes need to be tracked separately with version …\nRead of a per-epoch config object that should remain the …\nDeleted shared objects that appear as read-only in the …\nRead-only shared objects from the input. We don’t really …\nThe response from processing a transaction or a certified …\nReturn an iterator that iterates through all changed …\nReturn all objects that existed in the state prior to the …\nReturns all objects that will become a tombstone after …\nSize of bcs serialized byets of the effects.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the list of sequenced shared objects used in the …\nReturns the list of sequenced shared objects used in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe version assigned to all output objects (apart from …\nThe version assigned to all output objects (apart from …\nReturn an iterator of mutated objects, but excluding the …\nCreates a TransactionEffects message from the results of …\nCreates a TransactionEffects message from the results of …\nMetadata of objects prior to modification. This includes …\nMetadata of objects prior to modification. This includes …\nReturns all root shared objects (i.e. not child object) …\nReturns all root shared objects (i.e. not child object) …\nThe static epoch information that is accessible to move …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nCustom error type for Sui.\nSub-status codes for the <code>UNKNOWN_VERIFICATION_ERROR</code> VM …\nSub-status codes for the <code>MEMORY_LIMIT_EXCEEDED</code> VM Status …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if the error is retryable and if the error’s …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nBase64 string representing the object digest\nObject version.\nSpecific type of event\nA universal Sui event type encapsulating different types …\nUnique ID of a Sui Event, the ID is a combination of …\nSpecific event type\nConsecutive per-tx counter assigned to this event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMove event’s json value\nUTC timestamp in milliseconds since epoch (1/1/1970)\nTransaction digest of associated transaction\nCertificateProof is a proof that a transaction certs …\nValidity was proven by transaction certificate signature\nValidity was proven by inclusion in the given checkpoint\nValidity was proven through voting in consensus.\nAn ExecutableTransaction is a wrapper of a transaction …\nAt least f+1 validators have executed this transaction. In …\nTransaction generated by the system, for example Clock …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA type containing all of the information needed to work …\nA sequence of information about deleted shared objects in …\nUsed by sui-execution v1 and above, to capture the …\nView of the store necessary to produce the layouts of …\nAll object IDs created in this transaction.\nAll object IDs deleted in this transaction. No object ID …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf a transaction digest shows up in this list, when …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll objects that existed prior to this transaction, and …\nAll Move events emitted in this transaction.\nAll objects written regardless of whether they were …\nBuild a <code>BinaryConfig</code> from a <code>ProtocolConfig</code>\nGas used in the failed case, and the error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nWhich command the error occurred\nThe error\nReturns all objects that are used as input to the …\nThe effects produced by executing this transaction\nThe events, if any, emitted by this transactions during …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe state of all inputs to this transaction as they were …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe state of all output objects created or mutated or …\nThe input Transaction\nSummary of the charges in a transaction. Storage is …\nVersion aware enum for gas status.\nCost of computation/execution\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet net gas usage, positive number means used gas; …\nThe fee for the rebate. The portion of the storage rebate …\nPortion of the storage rebate that gets passed on to the …\nStorage cost, it’s the sum of all storage cost for all …\nThe amount of storage cost refunded to the user for all …\n<code>ToString::to_string</code>, but without panic on OOM.\nRust version of the Move sui::coin::CoinSui::sui::SUI type\nThe number of Mist per Sui token\nTotal supply denominated in Mist\nTotal supply denominated in Sui\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if <code>s</code> is the type of a gas balance (i.e., …\nReturn <code>true</code> if <code>s</code> is the type of a gas coin (i.e., …\n<code>ToString::to_string</code>, but without panic on OOM.\nIf true, input object bytes are treated as memory …\nIf true, do not charge the entire budget on storage OOG\nIf true, enable the check for gas price too high\nIf true, calculate value sizes using the legacy size …\nA list of constant costs of various operations in Sui.\nExecution cost table to be used.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe object size post-transaction in bytes\nstorage_cost is the total storage gas to charge. This is …\nstorage_rebate is the storage rebate (in Sui) for in this …\nReturns the final (computation cost, storage cost, storage …\nUpdate <code>storage_rebate</code> and <code>storage_gas_units</code> for each …\nThe size in bytes for a non-string or address constant on …\nThe Move VM implementation of state for gas metering.\nFor exists checks on data that doesn’t exists this is …\nThe size in bytes for a reference on the stack\nThe size of a struct in bytes\nThe size of a vector (without its containing data) in bytes\nVM flat fee\nGiven: pushes + pops + increase + decrease in size for an …\nCharge an instruction and fail if not enough gas units are …\nReturn the <code>CostTable</code> behind this <code>GasStatus</code>.\nCharge a given amount of gas and fail if not enough gas …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInitialize the gas state with metering enabled.\nInitialize the gas state with metering disabled.\nReturn the gas left.\nThe  <code>GasCost</code> tracks:\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert a GasCost to a total gas charge in <code>InternalGas</code>.\nMaximum number of active validators at any moment. We do …\nLower-bound on the amount of stake required to become a …\nA validator can have stake below …\nValidators with stake amount below …\nValidators with stake below …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRust version of the Move sui::object::ID type\nRust version of the Move sui::object::Info type\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrustedEnvelope is a serializable wrapper around Envelope …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemove the authority signatures <code>S</code> from this envelope.\nRemove the authority signatures <code>S</code> from this envelope.\nUse signing key to create a signed object.\nThis API should only be called when the input is already …\nThere are some situations (e.g. fragment verification) …\nUse this when you need to serialize a verified envelope. …\nUse this when you need to serialize a verified envelope. …\nReturns the Base64 encoded tx_bytes and a list of Base64 …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nCheckpointContents are the transactions included in an …\nThis is a message validators publish to consensus in order …\nHolds data in CheckpointSummary that is serialized into …\nThe Sha256 digest of an EllipticCurveMultisetHash …\nSame as CheckpointContents, but contains full contents of …\nCommitments to checkpoint-specific state (e.g. txns in …\nPresent only on the final checkpoint of the epoch.\nReturn an iterator that enumerates the transactions in the …\nCommitments to epoch specific state (e.g. live object set)\nThe running total gas costs of all transactions included …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTotal number of transactions committed since genesis, …\nnext_epoch_committee is <code>Some</code> if and only if the current …\nThe protocol version that is in effect during the epoch …\nLists the rounds for which RandomnessStateUpdate …\nif a sequence number is specified, return the checkpoint …\nif a sequence number is specified, return the checkpoint …\nTimestamp of the checkpoint - number of milliseconds from …\n<code>ToString::to_string</code>, but without panic on OOM.\nVerifies that this checkpoint’s digest matches the given …\nCheckpointSummary is not an evolvable structure - it must …\nUsed to advertise capabilities of each authority via …\nUsed to advertise capabilities of each authority via …\nThe index of an authority in the consensus committee. The …\nOnly commit_timestamp_ms is passed to the move call …\nUses an enum to allow for future expansion of the …\nConsensus round number.\nNon-decreasing timestamp produced by consensus in ms.\nThe index of a transaction in a consensus block.\nOriginating authority - must match consensus transaction …\nOriginating authority - must match transaction source …\nThe ObjectRefs of all versions of system packages that the …\nThe ObjectRefs of all versions of system packages that the …\nUnix timestamp from consensus commit.\nUnix timestamp from consensus commit.\nUnix timestamp from consensus commit.\nDigest of consensus output\nDigest of consensus output\nStores consensus handler determined shared object version …\nEpoch of the commit prologue transaction\nEpoch of the commit prologue transaction\nEpoch of the commit prologue transaction\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGeneration number set by sending authority. Used to …\nGeneration number set by sending authority. Used to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsensus round of the commit. Using u64 for compatibility.\nConsensus round of the commit\nConsensus round of the commit\nThe sub DAG index of the consensus commit. This field will …\nProtocolVersions that the authority supports.\nProtocolVersions that the authority supports.\nEncodes an u64 unique tracking id to allow us trace a …\nFor executed transaction, we could return an optional …\nResponse type for version 3 of the handle certifacte …\nSoft Bundle request.  See SIP-19.\nResponse type for the handle Soft Bundle certificates …\nResponse type for version 2 of the handle transaction …\nRequest the latest object state.\nLayout generation options – you can either generate or …\nA request for information about an object and optionally …\nThis message provides information about the latest object …\nRequest a specific version of the object. This is used …\nSignature over the transaction.\nVerified version of <code>ObjectInfoResponse</code>. <code>layout</code> and …\nIf transaction is already executed, return same result as …\nNot used. Full node local execution fast path was …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nif true return the layout of the object.\nIf requested, will included all initial versions of …\nIf requested, will included all initial versions of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSchema of the Move value inside this object. None if the …\nTransaction the object is locked on in this authority. …\nValue of the requested object in this authority\nValue of the requested object in this authority\nThe id of the object to retrieve, at the latest version.\nIf requested, will included all changed objects, including …\nIf requested, will included all changed objects, including …\nThe type of request, either latest object info or the past.\nThis enum represents all possible states of a response …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDEPRECATED in latest metered verifier, which only report …\nDEPRECATED in latest metered verifier, which only report …\nExecution limits metrics\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBytecode verifier runtime latency for each module …\nBytecode verifier runtime latency for each module which …\nBytecode verifier runtime latency for each programmable …\nBytecode verifier runtime latency for each programmable …\nBytecode verifier metrics timeout counter\nA utility to build consecutive checkpoints by adding …\nBuilds a checkpoint using internally buffered transactions.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOverride the next checkpoint number to generate. This can …\nConvenience accessors to the upgrade policies as u8s.\nAdditional information about a function\nUniquely identifies a function in a module\nA map from function info keys to function info\nIdentifies a struct and the module it was defined in\nRust representation of <code>sui::package::UpgradeCap</code>.\nUpgraded package info for the linkage table\nRust representation of upgrade policy constants in …\nRust representation of <code>sui::package::UpgradeReceipt</code>.\nRust representation of <code>sui::package::UpgradeTicket</code>.\nIt is important that this function is shared across both …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf true, it’s a function involved in testing (<code>[test]</code>, …\nChecks if a function is annotated with one of the …\nCreate a package with all required data (including …\nCreate an <code>UpgradeCap</code> for the newly published package at …\nCreate an <code>UpgradeReceipt</code> for the upgraded package at …\nCreate an initial version of the package along with this …\nCreate an upgraded version of the package along with this …\nApproximate size of the package in bytes. This is used for …\nThe ObjectID that this package’s modules believe they …\nReturn the size of the package in bytes\n<code>ToString::to_string</code>, but without panic on OOM.\nID of the upgraded packages\nVersion of the upgraded package\nError types\nContains the “port” to contact. Similar to TCP or UDP, …\n<code>Protocol</code> describes all possible multiaddress protocols.\nTurn this <code>Protocol</code> into one that owns its data, thus being …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse a single <code>Protocol</code> value from its byte slice …\nParse a protocol value from the given iterator of string …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempts to convert a multiaddr of the form …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nSet the ip address to <code>127.0.0.1</code>. For instance, it converts …\nSet the ip address to <code>0.0.0.0</code>. For instance, it converts …\nEncode this protocol by writing its binary representation …\nThe struct that contains signatures and public keys …\nThe struct that contains the public key used for …\nInterpret a bitmap of 01s as a list of indices that is set …\nThis combines a list of [enum Signature] …\nAnnotating a trait or enum definition with an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate MultiSig from its fields without validation\nConstruct MultiSigPublicKey without validation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeprecated, use [struct MultiSig] instead. The struct that …\nDeprecated, use [struct MultiSigPublicKey] instead. The …\nConvert a roaring bitmap to plain bitmap.\nThis combines a list of [enum Signature] …\nAnnotating a trait or enum definition with an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nObject is exclusively owned by a single address, and is …\nObject is sequenced via consensus. Ownership is managed by …\nIndex marking the end of the object’s ID + the beginning …\nObject is immutable, and hence ownership doesn’t matter.\nAn object whose governing logic lives in a published Move …\nThe object is found to be deleted with this version\nThe object does not exist\nObject is exclusively owned by a single object, and is …\nMap from each module name to raw serialized Move module …\nObject is shared, can be used by any address, and is …\nThe contained SuiAddress exclusively has all permissions: …\nThe object exists and is found with this version\nThe object exists but not found with this version\nThe asked object version is higher than the latest\nThe meat of the object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMake a few test gas objects (all with the same random …\nGet the total balances for all <code>Coin&lt;T&gt;</code> embedded in <code>self</code>.\nReturn the <code>value: u64</code> field of a <code>Coin&lt;T&gt;</code> type. Useful for …\nReturn the <code>value: u64</code> field of a <code>Coin&lt;T&gt;</code> type. Useful for …\nGet a <code>MoveStructLayout</code> for <code>self</code>. The <code>resolver</code> value must …\nGet a <code>MoveStructLayout</code> for <code>self</code>. The <code>resolver</code> value must …\nTreat the object type as a Move struct with one type …\nGet the total amount of SUI embedded in <code>self</code>. Intended for …\nGet the total amount of SUI embedded in <code>self</code>, including …\nSets the version of this object to a new value which is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the object value if there is any, otherwise an Err …\nReturns the object value if there is any, otherwise an Err\nReturn true if this object is a Move package, false if it …\nReturns true if the object is a system package.\nCreates a new Move object of type <code>type_</code> with BCS encoded …\nSafety\nGenerate a new gas coin object with default balance and …\nGenerate a new gas coin worth <code>value</code> with a random object …\nCreate a new Move object\nCreate a system package which is not subject to size …\nApproximate size of the object in bytes. This is used for …\nApproximate size of the object in bytes. This is used for …\nThe owner that unlocks this object\nThe digest of the transaction that created or last mutated …\nUpdate the <code>timestamp_ms: u64</code> field of the <code>Clock</code> type.\nUpdate the <code>value: u64</code> field of a <code>Coin&lt;T&gt;</code> type. Useful for …\nMake a new random test shared object.\nThe amount of SUI we would rebate if this object gets …\nConvert <code>self</code> to the JSON representation dictated by <code>layout</code>.\nConvert <code>self</code> to the JSON representation dictated by <code>layout</code>.\nChange the owner of <code>self</code> to <code>new_owner</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nUpdate the contents of this object but does not increment …\nThe authentication mode of the object\nThe version at which the object became shared\nThe version at which the object most recently became a …\nVisitor to deserialize annotated values or structs, …\nDeserialize <code>bytes</code> as a <code>MoveStruct</code> with layout <code>layout</code>. Can …\nDeserialize <code>bytes</code> as a <code>MoveValue</code> with layout <code>layout</code>. Can …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nAn passkey authenticator with parsed fields. See field …\nAn raw passkey authenticator struct used during …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the public key of the passkey authenticator.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA constructor for [struct PasskeyAuthenticator] with custom\nCompute the signing digest that the signature committed …\nVerify an intent message of a transaction with an passkey …\nLike pure but forces a separate input entry\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWill fail to generate if given an empty ObjVec\nWill fail to generate if recipients and amounts do not …\nWill fail to generate if recipients and amounts do not …\nEffects are certified by a quorum of validators.\nEffects are included in a checkpoint.\nProof of finality of transaction effects.\nContains the error value\nContains the error value\nWhen requested to execute a transaction with …\nContains the success value\nContains the success value\nClient facing errors regarding transaction submission via …\nA quorum of validators have acknowledged effects.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nA lightweight trait that all members of [enum …\nDue to the incompatibility of [enum Signature] (which …\nAnnotating a trait or enum definition with an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParse [enum CompressedSignature] from trait SuiSignature …\nParse [struct PublicKey] from trait SuiSignature …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDoes crypto validation for a transaction which may be …\nAn abstraction of the (possibly distributed) store for …\nThe object was created in this transaction\nDeleteKind together with the old sequence number prior to …\nContains the error value\nA potential input to a transaction.\nThe object was in storage already but has been modified\nAn object is provided in the call input, and gets deleted.\nContains the success value\nAn owned object was deleted (or wrapped) at the given …\nA <code>BackingPackageStore</code> that resolves packages from a …\nAn object was received at the given version in the …\nTrait used to provide functionality to the REST API …\nA shared object was deleted by the transaction and is no …\nAn abstraction of the (possibly distributed) store for …\nThe object was previously wrapped in another object, but …\nAn object is not provided in the call input, but gets …\nAn object is provided in the call input, and gets wrapped …\nCheck coin denylist during execution, and the number of …\nObjectId of the child object when …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a “full” checkpoint for purposes of state-sync “…\nGet a “full” checkpoint for purposes of state-sync “…\nGet the highest synced checkpint. This is the highest …\nGet the highest verified checkpint. This is the highest …\nGet the latest available checkpoint. This is the latest …\nGet the latest available checkpoint sequence number. This …\nGet the latest available checkpoint sequence number. This …\nGet the epoch of the latest checkpoint\nGet the epoch of the latest checkpoint\nThis function is only called by older protocol versions. …\nLowest available checkpoint for which transaction and …\nLowest available checkpoint for which object data can be …\n<code>receiving_object_id</code> must have an <code>AddressOwner</code> ownership …\nReturns Ok(&lt;package object for each package id in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe number of non-gas-coin owners in the transaction …\n<code>child</code> must have an <code>ObjectOwner</code> ownership equal to <code>owner</code>.\nOk if all regulated coin owners are allowed. Err if any …\nFetch the <code>ObjectKey</code>s (IDs and versions) for non-shared …\n<code>ToString::to_string</code>, but without panic on OOM.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\ncustom serde for AccountAddress\nUse with serde_as to control serde for human-readable …\nSerializes a bitmap according to the roaring bitmap …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSerialize StructTag as a string, retaining the leading …\n<code>ToString::to_string</code>, but without panic on OOM.\nSuiSystemState provides an abstraction over multiple …\nThis is the fixed type used by genesis.\nThis is the standard API that all inner system state …\nRust version of the Move sui::sui_system::SuiSystemState …\nAdvances epoch in safe mode natively in Rust, without …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGiven a system state type version, and the ID of the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAlways return the version that we will be using for …\nRate of the staking pool, pool token amount : Sui amount\nThis type captures the minimum amount of information from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRust version of the Move …\nRust version of the Move …\nRust version of the Move …\nRust version of the Move sui::sui_system::SystemParameters …\nRust version of the Move …\nRust version of the Move …\nRust version of the Move sui::validator::Validator type\nBalance of SUI set aside for stake subsidies that will be …\nThe amount of stake subsidy to be drawn down per …\nCount of the number of times stake subsidies have been …\nThe duration of an epoch, in milliseconds.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum number of active validators at any moment. We do …\nLower-bound on the amount of stake required to become a …\nThe rate at which the distribution amount decays at the …\nNumber of distributions to occur before the distribution …\nThe starting epoch in which stake subsidies start being …\nA validator can have stake below …\nValidators with stake amount below …\nValidators with stake below …\nVerify validator metadata and return a verified version …\nRust version of the Move …\nRust version of the Move …\nThe duration of an epoch, in milliseconds.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum number of active validators at any moment. We do …\nMinimum number of active validators at any moment.\nLower-bound on the amount of stake required to become a …\nThe starting epoch in which stake subsidies start being …\nA validator can have stake below …\nValidators with stake amount below …\nValidators with stake below …\nThis is the JSON-RPC type for the SUI system state object. …\nThis is the JSON-RPC type for the SUI validator. It …\nThe list of active validators in the current epoch.\nMap storing the number of epochs for which each validator …\nThe current epoch ID, starting from 0.\nThe duration of an epoch, in milliseconds.\nUnix timestamp of the current epoch start\nID of the exchange rate table object.\nNumber of exchange rates in the table.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGiven the staking pool id of a validator, return the …\nID of the object that maps from a staking pool ID to the …\nNumber of inactive staking pools.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum number of active validators at any moment. We do …\nLower-bound on the amount of stake required to become a …\nID of the object that contains the list of new validators …\nNumber of new validators that will join at the end of the …\nPending pool token withdrawn during the current epoch, …\nRemoval requests from the validators. Each element is an …\nPending stake amount for this epoch.\nPending stake withdrawn during the current epoch, emptied …\nTotal number of pool tokens issued by the pool.\nThe current protocol version, starting from 1.\nThe reference gas price for the current epoch.\nThe epoch stake rewards will be added here at the end of …\nWhether the system is running in a downgraded safe mode …\nAmount of computation rewards accumulated (and not yet …\nAmount of non-refundable storage fee accumulated during …\nAmount of storage rebates accumulated (and not yet burned) …\nAmount of storage rewards accumulated (and not yet …\nBalance of SUI set aside for stake subsidies that will be …\nThe amount of stake subsidy to be drawn down per epoch. …\nThe rate at which the distribution amount decays at the …\nThis counter may be different from the current epoch …\nNumber of distributions to occur before the distribution …\nThe starting epoch in which stake subsidies start being …\nThe epoch at which this pool became active.\nThe epoch at which this staking pool ceased to be active. …\nID of the staking pool object.\nID of the object that maps from staking pool’s ID to the …\nNumber of staking pool mappings.\nThe total number of SUI tokens in this pool.\nThe non-refundable portion of the storage fund coming from …\nThe storage rebates of all the objects on-chain stored in …\nThe current version of the system state data structure …\nTotal amount of stake from all active validators at the …\nID of the object that stores preactive validators, mapping …\nNumber of preactive validators.\nA validator can have stake below …\nValidators with stake amount below …\nA map storing the records of validator reporting each …\nValidators with stake below …\nConstants that change the behavior of the protocol.\nModels the set of protocol versions supported by a …\nModels the set of protocol versions supported by a …\nOverride one or more settings in the config, for testing. …\nGet a map of all config attribute from string …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCAREFUL! - You probably want to use <code>get_for_version</code> …\nConvenience to get the constants at the current minimum …\nGet the value ProtocolConfig that are in effect during the …\nGet the value ProtocolConfig that are in effect during the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLookup a config attribute by its string representation\nGet the feature flags\nUse by VersionedProtocolMessage implementors to describe …\nThe source that should be used to identify the client’s …\nBlocks connection_ip after reaching a tally frequency …\nDoes nothing\nSimple policy that adds connection_ip to blocklist when …\nTest policy that panics when invoked. To be used as an …\nList of String which should all parse to type IPAddr. If …\nTime in secs, after which no registered ingress traffic …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNote that this sample policy is applied on top of the …\nAn argument to a programmable transaction command\nA system transaction that will update epoch information …\nA single command in a programmable transaction.\nEndOfEpochTransaction replaces ChangeEpoch with a list of …\nEndOfEpochTransactionKind\nValidators wont sign a transaction unless the expiration …\nThe gas coin. The gas coin can only be used by-ref, except …\nOne of the input objects or primitive values (from …\n<code>forall T: Vec&lt;T&gt; -&gt; vector&lt;T&gt;</code> Given n-values of the same …\n<code>(&amp;mut Coin&lt;T&gt;, Vec&lt;Coin&lt;T&gt;&gt;)</code> It merges n-coins into the …\nA call to either an entry or a public Move function\nLike a <code>Result</code> but it accesses a nested result. Currently, …\nThe transaction has no expiration\nThe result of reading an object for execution. Because …\nThe command for calling a Move function, either an entry …\nA series of commands where the results of one command can …\nA transaction that allows the interleaving of native …\nPublishes a Move package. It takes the package bytes and a …\nThe result of another command (from <code>ProgrammableTransaction</code>…\nA transaction that is signed by a sender and also by an …\n<code>(&amp;mut Coin&lt;T&gt;, Vec&lt;u64&gt;)</code> -&gt; <code>Vec&lt;Coin&lt;T&gt;&gt;</code> It splits off …\nA transaction that is signed by a sender but not yet by an …\nTransactionKey uniquely identifies a transaction across …\n<code>(Vec&lt;forall T:key+store. T&gt;, address)</code> It sends n-objects …\nUpgrades a Move package Takes (in order):\nThe arguments to the function.\nThe initial version of the authenticator object that it …\nThe initial version of the authenticator object that it …\nCheck if the transaction is compliant with sponsorship.\nCheck if the transaction is compliant with sponsorship.\nCheck if the transaction is compliant with sponsorship.\nThe commands to be executed sequentially. A failure in any …\nThe total amount of gas charged for computation during the …\nComputes the tx digest that encodes the Rust type prefix …\nThe next (to become) epoch ID.\nEpoch of the authenticator state update transaction\nEpoch of the randomness state update transaction\nUnix timestamp when epoch started\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe function to be called.\nIf this is advance epoch transaction, returns (total gas …\nReturn the object ref iff the object is an owned object …\nReturn the metadata of each of the input objects for the …\nInput objects or primitive values\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nreturns true if the transaction is one that is specially …\nreturns true if the transaction is one that is specially …\nCheck if the transaction is sponsored (namely gas owner != …\nCheck if the transaction is sponsored (namely gas owner != …\nCheck if the transaction is sponsored (namely gas owner != …\nThe version to set on objects created by the computation …\nexpire JWKs that have a lower epoch than this\nThe specific module in the package containing the function.\nUse signing key to create a signed object.\nnewly active jwks\nThe non-refundable storage fee.\nnumber of commands, or 0 if it is a system transaction\nThe package containing the module and function.\npresent to make migrations to programmable transactions …\nThe protocol version in effect in the new epoch.\nUpdated random bytes\nThe initial version of the randomness object that it was …\nRandomness round of the update\nConsensus round of the authenticator state update\nReturns an iterator of all shared input objects used by …\nTransaction signer and Gas owner\nTransaction signer and Gas owner\nTransaction signer and Gas owner\nThe total amount of gas charged for storage during the …\nThe amount of storage rebate refunded to the txn senders.\nSystem packages (specifically framework and move stdlib) …\nReturns the Base64 encoded tx_bytes and a list of Base64 …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nnumber of transactions, or 1 if it is a system transaction\nA list of signatures signed by all transaction …\nThe type arguments to the function.\nValidate untrusted user transaction, including its size, …\nTrait to define the interface for how the REST service …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRust version of the Move sui::transfer::Receiving type\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConversion to a <code>TypeTag</code>, which can fail if this value …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a <code>TypeTag</code> consuming <code>self</code>. This can fail if this …\nConvert the TypeInput into a TypeTag without checking for …\nImplements the canonical string representation of the …\nReturn the canonical string representation of the TypeTag …\nReturn a canonical string representation of the struct.\nReturn a canonical string representation of the type. All …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMake a user signed transaction with the given sender and …\nRust version of the Move sui::versioned::Versioned type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn zk login authenticator with all the necessary fields.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new [struct ZkLoginAuthenticator] with necessary …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nVerify an intent message of a transaction with an zk login …\nReturns a valid ZkLoginInputs based on a fixed key, for …")
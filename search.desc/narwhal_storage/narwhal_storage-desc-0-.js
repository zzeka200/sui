searchState.loadedDescShard("narwhal_storage", 0, "A cache trait to be used as temporary in-memory store when …\nThe main storage when we have to deal with certificates. …\nAn LRU cache for the certificate store.\nThe persistent storage of the sequencer.\nContains the error value\nAll the data stores of the node.\nContains the success value\nStore of the batch digests for the primary node for the …\nThe storage for the proposer\nConvenience type to propagate store errors.\nThe storage for the last votes digests per authority\nRetrieves all the certificates with round &gt;= the provided …\nClear the store.\nClears both the main storage of the certificates and the …\nChecks existence of one or more digests.\nQueries the store whether the batch with provided <code>digest</code> …\nDeletes a single certificate by its digest.\nDeletes multiple certificates in an atomic way.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the last header\nReturns thet latest subdag committed. If none is committed …\nGets the latest sub dag index from the store\nRetrieves the highest round number in the store. Returns 0 …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether the storage is empty. The main storage is …\nRetrieves the last certificate of the given origin. …\nRetrieves the last round number of the given origin. …\nRetrieves the certificates of the last round and the round …\nCreate a new consensus store structure by using already …\nRetrieves the next round number bigger than the given …\nWhen called the method will wait until the entry of batch …\nWaits to get notified until the requested certificate …\nRetrieves origins with certificates in each round &gt;= the …\nFetches the certificate for the provided digest. This …\nRetrieves a certificate from the store. If not found then …\nRead the vote info based on the provided corresponding …\nReturns the certificates by performing a look up in the …\nFetches the certificates for the provided digests. This …\nRetrieves multiple certificates by their provided ids. The …\nRetrieves a certificate from the store by round and …\nLoad all the sub dags committed with sequence number of at …\nLoad consensus commit with a given sequence number.\nLoad the last committed round of each validator.\nReads from storage the latest commit sub dag where its …\nOpen or reopen all the storage of the node.\nInserts a certificate to the store\nInsert the vote’s basic details into the database for …\nInserts multiple certificates in the storage. This is an …\nWrites all the provided values atomically in store - …\nPersist the consensus state.\nInserts a proposed header into the store")
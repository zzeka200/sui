searchState.loadedDescShard("narwhal_types", 0, "The output of Consensus, which includes all the batches …\nEmpty message for when we don’t have anything to return\nUsed by the primary to request that the worker fetch the …\nAll batches requested by the primary.\nUsed by the primary to fetch certificates from other …\nUsed by the primary to reply to FetchCertificatesRequest.\nBuilder for <code>HeaderV1</code>.\nError type for HeaderV1Builder\nGenerated trait containing RPC methods that should be …\nGenerated trait containing RPC methods that should be …\nGenerated trait containing RPC methods that should be …\nGenerated trait containing RPC methods that should be …\nPreSubscribedBroadcastSender is a wrapped Broadcast …\nGenerated trait containing RPC methods that should be …\nGenerated trait containing RPC methods that should be …\nDEPRECATED. Can’t be deleted until tables that use this …\nUsed by primary to bulk request batches from workers local …\nUsed by the primary to request a vote from other primaries …\nUsed by the primary to reply to RequestVoteRequest.\nThe round number.\nRequest for broadcasting certificates to peers.\nResponse from peers after receiving a certificate.\nA global sequence number assigned to every CommittedSubDag.\nShutdown token dropped when a task is properly shut down.\nThe epoch UNIX timestamp in milliseconds\nGenerated trait containing gRPC methods that should be …\nUninitialized field\nCustom validation error\nA Vote on a Header is a claim by the voting authority that …\nUsed by workers to send a new batch.\nUsed by worker to inform primary it received a batch from …\nUsed by worker to inform primary it sealed a new batch.\nUsed by the primary to request that the worker sync the …\nGenerated trait containing RPC methods that should be …\nGenerated trait containing RPC methods that should be …\nEnable decompressing responses.\nEnable decompressing requests with the given encoding.\nAdds the provided <code>score</code> to the existing score for the …\nMatches certificates in the <code>sub_dag</code> one-to-one.\nThe sequence of committed certificates.\nThe sequence of committed certificates’ digests.\nThe sequence of committed certificates’ digests.\nCertificates sorted from lower to higher rounds.\nValidate that all current expectations for all methods have\nValidate that all current expectations for all methods have\nValidate that all current expectations for all methods have\nValidate that all current expectations for all methods have\nThe timestamp that should identify this commit. This is …\nAttempt to create a new client by connecting to a given …\nThe latest Epoch for which a vote was sent to given …\nThe exclusive lower bound is a round number where each …\nCreate an <code>Expectation</code> for mocking the <code>fetch_batches</code> method\nCreate an <code>Expectation</code> for mocking the <code>fetch_certificates</code> …\nCreate an <code>Expectation</code> for mocking the <code>report_batch</code> method\nCreate an <code>Expectation</code> for mocking the <code>report_others_batch</code> …\nCreate an <code>Expectation</code> for mocking the <code>report_own_batch</code> …\nCreate an <code>Expectation</code> for mocking the <code>request_batches</code> …\nCreate an <code>Expectation</code> for mocking the <code>request_vote</code> method\nCreate an <code>Expectation</code> for mocking the <code>send_certificate</code> …\nCreate an <code>Expectation</code> for mocking the <code>synchronize</code> method\nWhen true it notifies us that those scores will be the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the underlying service.\nGets a reference to the underlying service.\nGets a reference to the underlying service.\nGets a reference to the underlying service.\nGets a mutable reference to the underlying service.\nGets a mutable reference to the underlying service.\nGets a mutable reference to the underlying service.\nGets a mutable reference to the underlying service.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying service.\nConsumes <code>self</code>, returning the underlying service.\nConsumes <code>self</code>, returning the underlying service.\nConsumes <code>self</code>, returning the underlying service.\nThe leader certificate responsible of committing this …\nThe leader certificate’s digest responsible of …\nThe leader certificate’s digest responsible of …\nThe round of the leader\nThe round of the leader\nLimits the maximum size of a decoded message.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nLimits the maximum size of an encoded message.\nMaximum number of certificates that should be returned.\nCreating a new ReputationScores instance pre-populating …\nCreate a new mock object with no expectations.\nCreate a new mock object with no expectations.\nCreate a new mock object with no expectations.\nCreate a new mock object with no expectations.\nThe so far calculated reputation score for nodes\nThe so far calculated reputation score for nodes\nThe so far calculated reputation score for nodes\nThe latest round for which a vote was sent to given …\nHolds the score for every authority. If an authority is …\nCompress requests with the given encoding.\nCompress responses with the given encoding, if the client …\nThis function requires that certificate was verified …\nThis function requires that certificate was verified …\nThis function requires that certificate was verified …\nThis contains per authority serialized RoaringBitmap for …\nThe index associated with this CommittedSubDag\nSequence number of the CommittedSubDag\nSequence number of the CommittedSubDag\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nVerifies the validity of the certificate.\nVerifies the validity of the certificate.\nThe hash of the vote used to ensure equality\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.")